
@using STG.ViewModels;
@using STG.ViewModels.TeacherViewModel;
@model FirstViewModel;

@{
    @using Microsoft.AspNetCore.Antiforgery
    @inject IAntiforgery antiforgery
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}


<div class="modal fade" id="modalExcluziveAccessInit" tabindex="-1" role="dialog" aria-labelledby="modalExcluziveAccessInitLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content modalRegistration">
            <div class="modal-header">
                <h5 class="modal-title" id="modalExcluziveAccessInitLabel">
                    Регистрация
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body block">

                <form id="regForm">

                    @if (!Context.User.Identity.IsAuthenticated)
                    {
                    <div class="form-group">
                        <label>Личная информация</label>
                        <input type="text" class="form-control" placeholder="Ваше имя" name="firstname" id="firstname_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                        <input type="text" class="form-control" placeholder="Ваша фамилия" name="secondname" id="secondname_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                        <input type="text" class="form-control" placeholder="Электронная почта" name="username" id="username_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />

                        <select class="form-control" name="id_of_region" id="id_of_region_mea" onchange="removeNotFilledModalExcluziveAccess(this)">
                            <option value="0">Регион</option>
                            @foreach (var region in Model.regionEnum)
                            {
                            <option value="@region.id">@region.name</option>
                            }
                        </select>
                        <input type="text" class="form-control" placeholder="Ссылка на ваш instagram" name="instagram" id="instagram_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />

                        <label>Дата рождения</label>
                        <input type="date" class="form-control" placeholder="Дата рождения" name="date_of_birthday" id="date_of_birthday_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />

                    </div>

                        <div class="form-group">
                            <input type="password" class="form-control" placeholder="Придумайте пароль" name="password" id="password_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                        </div>

                        <div class="form-group">
                            <input type="password" class="form-control" placeholder="Подтвердить пароль" name="password_again" id="password_again_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                        </div>

                    }

                    <div class="form-group">
                        <label>
                            Вам нужно составить программу и сопровождение наставника?
                        </label>
                        <select class="form-control" name="is_need_curator" id="is_need_curator_mea" onchange="curatorControl(this.value);removeNotFilledModalExcluziveAccess(this)">
                            @if (!Context.User.Identity.IsAuthenticated)
                            {
                                <option value="0">Зарегистрироваться без тарифа</option>
                            }
                            <option value="1" selected>Тариф “Базовый”</option>
                            <option value="2">Тариф “Продвинутый”</option>
                            <option value="3">Тариф “Углубленный”</option>
                        </select>
                    </div>




                    <div id="for_need_curator">

                        <div class="form-group">
                            <label>Ваш танцевальный стаж?</label>
                            <select class="form-control" name="experience" id="experience_mea" onchange="removeNotFilledModalExcluziveAccess(this)">
                                <option value="0">- не выбрано</option>
                                <option value="1">В первый раз (никогда раньше не танцевали)</option>
                                <option value="2">Начинающий (брали несколько классов и понимаете основы)</option>
                                <option value="3">Продолжающие (тацуете регулярно, хочу углубить свои знания)</option>
                                <option value="4">Профи (у вас большой опыт, просто хотите что-то новое)</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Что вы ожидаете или хотите получить от занятий на данной платформе?</label>
                            <select class="form-control" name="expectations" id="expectations_mea" onchange="removeNotFilledModalExcluziveAccess(this)">
                                <option value="0">- не выбрано</option>
                                <option value="1">Хочу изучить/повторить базу</option>
                                <option value="2">Хочу научиться фристайлить</option>
                                <option value="3">Хочу выучить хореографии</option>
                                <option value="4">Хочу стать увереннее на танцевальных площадках</option>
                                <option value="5">Хочу похудеть, улучшить здоровье</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Сколько вы сможете уделять времени на занятия в день?</label>
                            <select class="form-control" name="expected_time_for_lessons" id="expected_time_for_lessons_mea" onchange="removeNotFilledModalExcluziveAccess(this)">
                                <option value="0">- не выбрано</option>
                                <option value="1">15-45 минут</option>
                                <option value="2">Больше 45 минут</option>
                                <option value="3">Готов тренироваться весь день</option>
                            </select>
                        </div>

                        <div class="form-group">

                            <label>Кто ваши кумиры в танцевальном мире?</label>
                            <textarea class="form-control" rows="5" maxlength="5000" name="idols" id="idols_mea"></textarea>

                        </div>


                        <div class="form-group">
                            <label>Вставьте, пожалуйста, ссылки на ваши 3 видео, где вы танцуете. 
                                <a data-toggle="collapse" href="#collapseRequirements" role="button" aria-expanded="false" aria-controls="collapseRequirements">Требования к видео</a>
                                <ul class="collapse ul-requirements" id="collapseRequirements">
                                    <li>- видео должно быть хорошего качества 720 минимум</li>
                                    <li>- видео должно быть не старше 6 месяцев</li>
                                    <li>- на видео может быть не более 4х человек кроме вас</li>
                                    <li>- вас должно быть хорошо видно на протяжении всего видео</li>
                                    <li>- вас не должны загораживать</li>
                                    <li>- вы всегда должны быть в кадре</li>
                                    <li>- если вы танцуете чужую хореографию, то нужно подписать чья она ( можно в названии видео )</li>
                                    <li>- если ссылка на инстаграмм, то акк должен быть открытым</li>
                                </ul>
                            </label>
                            <input type="text" class="form-control" placeholder="Ссылка на видео №1" name="link1" id="link1_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                            <input type="text" class="form-control" placeholder="Ссылка на видео №2" name="link2" id="link2_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                            <input type="text" class="form-control" placeholder="Ссылка на видео №3" name="link3" id="link3_mea" onkeypress="removeNotFilledModalExcluziveAccess(this)" />
                        </div>

                        <div class="form-group">
                            <label>Выберите, пожалуйста, минимум 2-ух <a href="/teachers" target="_blank">наставников</a> (Бронь программы 1000 рублей, сумма будет включена в итоговую стоимость)</label>
                            @foreach (TeacherCuratorChooseViewModel teacher in Model.curators)
                            {
                                <div class="form-check">
                                    <input class="form-check-input curator-checkbox" type="checkbox" value="@teacher.id" name="curator_@teacher.id" id="curator_@teacher.id" onchange="removeNotFilledModalExcluziveAccess(this)" />
                                    <label class="form-check-label" for="curator_@teacher.id">
                                        <a href="/teacher/@teacher.id" target="_blank">@teacher.name</a>
                                    </label>
                                </div>
                            }
                        </div>

                        <div class="form-group">
                            <label>К оплате:</label>
                            <input type="text" class="form-control" placeholder="1000" name="price" id="price" disabled />
                        </div>

                    </div>
                    <hr />


                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="privacy" onchange="enableFormModalExcluziveAccess()" />
                        <label class="form-check-label" for="privacy">
                            Я принимаю <a href="/privacy" target="_blank">политику конфиденциальности</a>
                        </label>
                    </div>

                    <div class="form-group">
                        <button type="button" id="btnReg" class="btn btn-block"
                                onclick="@(Context.User.Identity.IsAuthenticated ? "sendStatementModalExcluziveAccess(this)" : "registrationModalExcluziveAccess(this)")" disabled>
                            Оплатить
                        </button>
                        <p class="warning"></p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    function enableFormModalExcluziveAccess() {
        var btn = document.getElementById("btnReg");
        if (document.getElementById("privacy").checked) {
            btn.disabled = false;
        } else {
            btn.disabled = true;
        }
    }

    function registrationModalExcluziveAccess(btn) {

        var inputs = document.getElementById("regForm").getElementsByTagName("input");
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].classList.remove("not_filled");
        }
        clearWarning();

        btnDisabledModalExcluziveAccess(btn, true);
        var form = new FormData(document.getElementById("regForm"));



        if (form.get("firstname") == "") {
            makeWarningModalExcluziveAccess("Не указано имя");
            makeInputNotFilledModalExcluziveAccess("firstname");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("secondname") == "") {
            makeWarningModalExcluziveAccess("Не указана фамилия");
            makeInputNotFilledModalExcluziveAccess("secondname");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("username") == "") {
            makeWarningModalExcluziveAccess("Не указана электронная почта");
            makeInputNotFilledModalExcluziveAccess("username");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (!isValidateEmail(form.get("username"))) {
            makeWarningModalExcluziveAccess("Электронная почта введена некорректно");
            makeInputNotFilledModalExcluziveAccess("username");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("date_of_birthday") != "" && !isValidDate(form.get("date_of_birthday"))) {
            makeWarningModalExcluziveAccess("Введена некоррентная дата рождения");
            makeInputNotFilledModalExcluziveAccess("date_of_birthday");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("id_of_region") == 0) {
            makeWarningModalExcluziveAccess("Не указан регион");
            makeInputNotFilledModalExcluziveAccess("id_of_region");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("password") == "") {
            makeWarningModalExcluziveAccess("Не указан пароль");
            makeInputNotFilledModalExcluziveAccess("password");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("password_again") == "") {
            makeWarningModalExcluziveAccess("Не указан пароль еще раз");
            makeInputNotFilledModalExcluziveAccess("password_again");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }
        if (form.get("password_again") != form.get("password")) {
            makeWarningModalExcluziveAccess("Пароли не совпадают");
            makeInputNotFilledModalExcluziveAccess("password_again");
            btnDisabledModalExcluziveAccess(btn, false);
            return;
        }


        if (form.get("is_need_curator") == 2 || form.get("is_need_curator") == 3) {
            var isNoVideo = false;
            if (form.get("link1") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link1"); isNoVideo = true;
            }
            if (form.get("link2") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link2"); isNoVideo = true;
            }
            if (form.get("link3") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link3"); isNoVideo = true;
            }
            if (isNoVideo) {
                btnDisabledModalExcluziveAccess(btn, false);
                return;
            }
        }

        if (form.get("is_need_curator") > 1) {
            var curators = [];
            var inputsCurator = document.getElementsByClassName("curator-checkbox");
            for (var i = 0; i < inputsCurator.length; i++) {
                if (inputsCurator[i].checked) curators.push(inputsCurator[i].value);
            }
            if (curators.length < 2) {
                makeWarningModalExcluziveAccess("Укажите, пожалуйста, минимум 2-ух желаемых наставников");
                btnDisabledModalExcluziveAccess(btn, false);
                return;
            }
        }
        form.append("curators", curators);

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/user/registration",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                makeWarningModalExcluziveAccess("Ошибка соединения с сервером");
                btnDisabledModalExcluziveAccess(btn, false);
            },
            success: function (html) {

                if (html["status"] == "success") {
                    if (form.get("is_need_curator") > 1 && html["payment"]["paymentURL"] != null && typeof (html["payment"]["paymentURL"]) != "undefined") {
                        window.location.href = html["payment"]["paymentURL"];
                    } else {
                        window.location.href = "/";
                    }
                } else if (html["status"] == "error" && html["errors"] == "username_already_exist") {
                    makeWarningModalExcluziveAccess("Указанный email уже зарегистрирован в базе");
                } else if (html["status"] == "error" && html["errors"] == "no_data") {
                    makeWarningModalExcluziveAccess("Извините, произошла ошибка на сервере");
                } else if (html["status"] == "error") {
                    makeWarningModalExcluziveAccess("Извините, неизвестная ошибка на сервере");
                }
                btnDisabledModalExcluziveAccess(btn, false);
            }
        });
    }

    function sendStatementModalExcluziveAccess(btn) {

        var inputs = document.getElementById("modalExcluziveAccessInit").getElementsByTagName("input");
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].classList.remove("not_filled");
        }
        clearWarning();

        btnDisabledModalExcluziveAccess(btn, true);
        var form = new FormData(document.getElementById("modalExcluziveAccessInit").getElementsByTagName("form")[0]);

        if (form.get("is_need_curator") > 1) {
            var curators = [];
            var inputsCurator = document.getElementsByClassName("curator-checkbox");
            for (var i = 0; i < inputsCurator.length; i++) {
                if (inputsCurator[i].checked) curators.push(inputsCurator[i].value);
            }
            if (curators.length < 2) {
                makeWarningModalExcluziveAccess("Укажите, пожалуйста, минимум 2-ух желаемых наставников");
                btnDisabledModalExcluziveAccess(btn, false);
                return;
            }
        }
        form.append("curators", curators);

        if (form.get("is_need_curator") == 2 || form.get("is_need_curator") == 3) {
            var isNoVideo = false;
            if (form.get("link1") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link1"); isNoVideo = true;
            }
            if (form.get("link2") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link2"); isNoVideo = true;
            }
            if (form.get("link3") == "") {
                makeWarningModalExcluziveAccess("Введите, пожалуйста, ссылку на ваше видео"); makeInputNotFilledModalExcluziveAccess("link3"); isNoVideo = true;
            }
            if (isNoVideo) {
                btnDisabledModalExcluziveAccess(btn, false);
                return;
            }
        }

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/statement/add_by_user",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                makeWarningModalExcluziveAccess("Ошибка соединения с сервером");
                btnDisabledModalExcluziveAccess(btn, false);
            },
            success: function (html) {

                if (html["status"] == "success") {
                    if (form.get("is_need_curator") > 1 && html["payment"]["paymentURL"] != null && typeof (html["payment"]["paymentURL"]) != "undefined") {
                        window.location.href = html["payment"]["paymentURL"];
                    } else {
                        //window.location.href = "/";
                    }
                } else {
                    makeWarningModalExcluziveAccess("Извините, неизвестная ошибка на сервере");
                }
                btnDisabledModalExcluziveAccess(btn, false);
            }
        });
    }

    function clearWarning() {
        makeWarningModalExcluziveAccess("");
    }
    function btnDisabledModalExcluziveAccess(btn, v) {
        v ? btn.disabled = true : btn.disabled = false;
    }
    function removeNotFilledModalExcluziveAccess(el) {
        el.classList.remove("not_filled");
        clearWarning();
    }
    function makeWarningModalExcluziveAccess(value) {
        document.getElementById("modalExcluziveAccessInit").getElementsByClassName("warning")[0].innerHTML = value;
    }
    function makeInputNotFilledModalExcluziveAccess(name) {
        document.getElementById(name + "_mea").classList.add("not_filled");
    }
    function curatorControl(value) {
        (value == 0) ? $("#for_need_curator").hide() : $("#for_need_curator").show();
        if (value == 0) {
            $("#btnReg").html("Зарегистрироваться");
        } else {
            $("#btnReg").html("Оплатить");
        }
    }


</script>
