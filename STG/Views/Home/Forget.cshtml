
@{
    ViewData["Title"] = "Забыли пароль";
    @using Microsoft.AspNetCore.Antiforgery
    @inject IAntiforgery antiforgery
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}



<div class="col-12 row">
    <div class="d-none d-md-block col-4"></div>
    <div class="col-12 col-lg-4 col-md-4 col-sm-12 login">
        <div class="block">
            <h2>Восстановление пароля</h2>
            <hr />
            <form action="#" id="formStep1" autocomplete="off">
                <label>На вашу электронную почту будет отправлен 6-ти значный код:</label>
                <input type="text" name="username" class="form-control" placeholder="Электронная почта" onkeypress="clearWarning()" />

                <button class="btn" type="button" onclick="forget(this, 0)">
                    Восстановить
                </button>
                <p class="warning"></p>
            </form>


            <form action="#" id="formStep2" class="divHide" autocomplete="off">
                <label>На вашу электронную почту был отправлен 6-ти значный код, введите пожалуйста его ниже:</label>
                <input type="number" max="999999" name="code" class="form-control" placeholder="Введите код" onkeypress="clearWarning()" />

                <button class="btn" type="button" onclick="changeStep(0)">
                    Отмена
                </button>
                <button class="btn" type="button" onclick="forget(this, 1)">
                    Отправить
                </button>
                <p class="warning"></p>
            </form>


            <form action="#" id="formStep3" class="divHide" autocomplete="off">
                <label>На вашу электронную почту был отправлен новый автоматически сгенерированный пароль</label>
            </form>

            <hr />
            <p>
                У вас нет аккаунта? <a href="/registration">Зарегистрироваться</a>
            </p>
            <p>
                Вспомнили? <a href="/login">Войти</a>
            </p>
        </div>
    </div>
</div>

<script>
    var forget_id = 0;
    function changeStep(step) {
        clearWarning();
        var form1 = document.getElementById("formStep1");
        var form2 = document.getElementById("formStep2");
        var form3 = document.getElementById("formStep3");
        switch (step) {
            case 0:
                form1.classList.remove("divHide");
                form2.classList.add("divHide");
                form3.classList.add("divHide");
                break;
            case 1:
                form1.classList.add("divHide");
                form2.classList.remove("divHide");
                form3.classList.add("divHide");
                break;
            case 2:
                form1.classList.add("divHide");
                form2.classList.add("divHide");
                form3.classList.remove("divHide");
                break;
            default:
                break;
        }
    }

    function forget(btn, step) {
        clearWarning();

        btnEndabled(btn, true);
        var formEl = document.getElementById("formStep" + (step + 1));
        var form = new FormData(formEl);

        if (step == 0 && form.get("username") == "") {
            formEl.getElementsByClassName("warning")[0].innerHTML = "Не указана почта";
            btnEndabled(btn, false);
            return;
        }
        if (step == 1 && form.get("code") == "") {
            formEl.getElementsByClassName("warning")[1].innerHTML = "Не указан код";
            btnEndabled(btn, false);
            return;
        }
        form.append("step", step);
        form.append("forget_id", forget_id);

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/user/forget",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                makeWarning("Ошибка соединения с сервером");
                btnEndabled(btn, false);
            },
            success: function (html) {
                if (html["status"] == "success") {
                    if (step == 0) {
                        forget_id = html["forget_id"];
                        changeStep(1);
                    } else if (step == 1) {
                        changeStep(2);
                    }
                } else if (html["status"] == "error" && html["errors"] == "no_username") {
                    makeWarningStep1("Почты не найдено");
                } else if (html["status"] == "error" && html["errors"] == "max_limit_try") {
                    makeWarning("Превышен лимит попыток, подождите пожалуйста 20 минут");
                } else if (html["status"] == "error" && html["errors"] == "not_found") {
                    makeWarning("Пользователь не найден");
                } else if (html["status"] == "error" && html["errors"] == "wrong_max_limit") {
                    makeWarning("Количество попыток исчерпано");
                } else if (html["status"] == "error" && html["errors"] == "wrong_2") {
                    makeWarning("Код введён неверно, осталось попыток: 1");
                } else if (html["status"] == "error" && html["errors"] == "wrong_1") {
                    makeWarning("Код введён неверно, осталось попыток: 2");
                } else if (html["status"] == "error" && html["errors"] == "wrong") {
                    makeWarning("Код введён неверно, осталось попыток: 3");
                } else {
                    makeWarning("Извините, на сервере произошла неизвестная ошибка");
                }
                btnEndabled(btn, false);
            }
        });

    }
    function clearWarning() {
        document.getElementsByClassName("warning")[0].innerHTML = "";
        document.getElementsByClassName("warning")[1].innerHTML = "";
    }
    function makeWarningStep1(message) {
        document.getElementsByClassName("warning")[0].innerHTML = message;
    }
    function makeWarningStep2(message) {
        document.getElementsByClassName("warning")[1].innerHTML = message;
    }
    function makeWarning(message) {
        document.getElementsByClassName("warning")[0].innerHTML = message;
        document.getElementsByClassName("warning")[1].innerHTML = message;
    }

    function btnEndabled(btn, v) {
        v ? btn.disabled = true : btn.disabled = false;
    }
    function removeNotFilled(id) {
        $("#" + id).removeClass("not_filled");
        clearWarning();
    }
</script>