@using STG.ViewModels.User
@using STG.ViewModels.TeacherViewModel;
@model RegistrationViewModel;


@{
    ViewData["Title"] = "Регистрация | STG";
    @using Microsoft.AspNetCore.Antiforgery
    @inject IAntiforgery antiforgery
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}



<div class="col-12 row">
    <div class="d-none d-md-block col-4"></div>
    <div class="col-12 col-lg-4 col-md-8 col-sm-12 registration">
        <div class="block">
            <h2>Регистрация</h2>
            <hr />
            <form id="regForm">
                <div class="form-group">
                    <label>Ваш танцевальный стаж?</label>
                    <select class="form-control" name="experience" id="experience" onchange="removeNotFilled(this.id)">
                        <option value="0">- не выбрано</option>
                        <option value="1">В первый раз (никогда раньше не танцевали)</option>
                        <option value="2">Начинающий (брали несколько классов и понимаете основы)</option>
                        <option value="3">Продолжающие (тацуете регулярно, хочу углубить свои знания)</option>
                        <option value="4">Профи (у вас большой опыт, просто хотите что-то новое)</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Что вы ожидаете или хотите получить от занятий на данной платформе?</label>
                    <select class="form-control" name="expectations" id="expectations" onchange="removeNotFilled(this.id)">
                        <option value="0">- не выбрано</option>
                        <option value="1">Хочу изучить/повторить базу</option>
                        <option value="2">Хочу научиться фристайлить</option>
                        <option value="3">Хочу выучить хореографии</option>
                        <option value="4">Хочу стать увереннее на танцевальных площадках</option>
                        <option value="5">Хочу похудеть, улучшить здоровье</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Сколько вы сможете уделять времени на занятия в день?</label>
                    <select class="form-control" name="expected_time_for_lessons" id="expected_time_for_lessons" onchange="removeNotFilled(this.id)">
                        <option value="0">- не выбрано</option>
                        <option value="1">15-45 минут</option>
                        <option value="2">Больше 45 минут</option>
                        <option value="3">Готов тренироваться весь день</option>
                    </select>
                </div>

                <div class="form-group">

                    <label>Кто ваши кумиры в танцевальном мире?</label>
                    <textarea class="form-control" rows="5" maxlength="5000" name="idols" id="idols"></textarea>

                </div>

                <hr />


                <div class="form-group">
                    <label>Вам нужно составить программу и сопровождение куратора? <a href="#">Что это значит?</a></label>
                    <select class="form-control" name="is_need_curator" id="is_need_curator" onchange="curatorControl(this.value);removeNotFilled(this.id)">
                        <option value="0">- не выбрано</option>
                        <option value="1">Нет, не нужен куратор</option>
                        <option value="2">Да, мне нужен feedback от куратора в конце обучения</option>
                        <option value="3">Да, мне нужен постоянное сопровождение куратора</option>
                    </select>
                </div>

                <div id="for_need_curator">
                    <div class="form-group">
                        <label>Вставьте пожалуйста ссылки на ваши 3 видео, где вы танцуете. <a href="#">Требования к видео</a></label>
                        <input type="text" class="form-control" placeholder="Ссылка на видео №1" name="link1" id="link1" onkeypress="removeNotFilled(this.id)" />
                        <input type="text" class="form-control" placeholder="Ссылка на видео №2" name="link2" id="link2" onkeypress="removeNotFilled(this.id)" />
                        <input type="text" class="form-control" placeholder="Ссылка на видео №3" name="link3" id="link3" onkeypress="removeNotFilled(this.id)" />
                    </div>

                    <div class="form-group">
                        <label>Выберите пожалуйста минимум 2-ух <a href="/teachers" target="_blank">наставников</a> (стоимость рассмотрения заявки 1000 руб)</label>
                        @foreach (TeacherCuratorChooseViewModel teacher in Model.teacherCurators)
                        {
                            <div class="form-check">
                                <input class="form-check-input curator-checkbox" type="checkbox" value="@teacher.id" name="curator_@teacher.id" id="curator_@teacher.id" />
                                <label class="form-check-label" for="curator_@teacher.id">
                                    <a href="/teacher/@teacher.id" target="_blank">@teacher.name</a>
                                </label>
                            </div>
                        }
                    </div>

                </div>
                <hr />
                <div class="form-group">
                    <label>Личная информация</label>
                    <input type="text" class="form-control" placeholder="Ваше имя" name="firstname" id="firstname" onkeypress="removeNotFilled(this.id)" />
                    <input type="text" class="form-control" placeholder="Электронная почта" name="username" id="username" onkeypress="removeNotFilled(this.id)" />

                    <select class="form-control" name="id_of_region" id="id_of_region" onchange="removeNotFilled(this.id)">
                        <option value="0">Регион</option>

                        @foreach (var region in Model.regionEnum)
                        {
                            <option value="@region.id">@region.name</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <input type="password" class="form-control" placeholder="Придумайте пароль" name="password" id="password" onkeypress="removeNotFilled(this.id)" />
                </div>

                <div class="form-group">
                    <input type="password" class="form-control" placeholder="Подтвердить пароль" name="password_again" id="password_again" onkeypress="removeNotFilled(this.id)" />
                </div>

                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Ссылка на ваш instagram" name="instagram" id="instagram" onkeypress="removeNotFilled(this.id)" />
                </div>



                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="privacy" onchange="enableForm()" />
                    <label class="form-check-label" for="privacy">
                        Я принимаю <a href="/privacy" target="_blank">политику конфиденциальности</a>
                    </label>
                </div>

                <div class="form-group">
                    <button type="button" id="btnReg" class="btn btn-block" onclick="registration(this)" disabled>
                        Зарегистрироваться
                    </button>
                    <p id="warning"></p>
                </div>
            </form>
            <p>
                У вас есть аккаунта? <a href="/login">Войти</a>
            </p>

            <script>
                function enableForm() {
                    var btn = document.getElementById("btnReg");
                    if (document.getElementById("privacy").checked) {
                        btn.disabled = false;
                    } else {
                        btn.disabled = true;
                    }
                }

                function registration(btn) {

                    var inputs = document.getElementById("regForm").getElementsByTagName("input");
                    for (let i = 0; i < inputs.length; i++) {
                        inputs[i].classList.remove("not_filled");
                    }
                    clearWarning();

                    btnEndabled(btn, true);
                    var form = new FormData(document.getElementById("regForm"));
                    if (form.get("is_need_curator") == 0) {
                        $("#warning").html("Укажите пожалуйста, необходим ли вам куратор");
                        $("#is_need_curator").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }

                    if (form.get("is_need_curator") > 1) {
                        var curators = [];
                        var inputsCurator = document.getElementsByClassName("curator-checkbox");
                        for (var i = 0; i < inputsCurator.length; i++) {
                            if (inputsCurator[i].checked) curators.push(inputsCurator[i].value);
                        }
                        if (curators.length < 2) {
                            $("#warning").html("Укажите пожалуйста, минимум 2-ух желаемых наставников");
                            return;
                        }
                    }
                    form.append("curators", curators);

                    if (form.get("is_need_curator") == 2 || form.get("is_need_curator") == 3) {
                        var isNoVideo = false;
                        if (form.get("link1") == "") {
                            $("#warning").html("Введите пожалуйста ссылку на ваше видео"); $("#link1").addClass("not_filled"); isNoVideo = true;
                        }
                        if (form.get("link2") == "") {
                            $("#warning").html("Введите пожалуйста ссылку на ваше видео"); $("#link2").addClass("not_filled"); isNoVideo = true;
                        }
                        if (form.get("link3") == "") {
                            $("#warning").html("Введите пожалуйста ссылку на ваше видео"); $("#link3").addClass("not_filled"); isNoVideo = true;
                        }
                        if (isNoVideo) {
                            btnEndabled(btn, false);
                            return;
                        }
                    }

                    if (form.get("firstname") == "") {
                        $("#warning").html("Не указано имя");
                        $("#firstname").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }
                    if (form.get("username") == "") {
                        $("#warning").html("Не указана электронная почта");
                        $("#username").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }
                    if (form.get("password") == "") {
                        $("#warning").html("Не указан пароль");
                        $("#password").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }
                    if (form.get("password_again") == "") {
                        $("#warning").html("Не указан пароль еще раз");
                        $("#password_again").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }
                    if (form.get("password_again") != form.get("password")) {
                        $("#warning").html("Пароли не совпадают");
                        $("#password_again").addClass("not_filled");
                        btnEndabled(btn, false);
                        return;
                    }


                    $.ajax({
                        method: 'POST',
                        type: "POST",
                        url: "/api/user/registration",
                        data: form,
                        cashe: false,
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                        },
                        error: function () {
                            $("#warning").html("Ошибка соединения с сервером");
                            btnEndabled(btn, false);
                        },
                        success: function (html) {

                            if (html["status"] == "success") {
                                if (form.get("is_need_curator") > 1 && html["payment"]["paymentURL"] != null && typeof (html["payment"]["paymentURL"]) != "undefined") {
                                    window.location.href = html["payment"]["paymentURL"];
                                } else {
                                    window.location.href = "/";
                                }
                            } else if (html["status"] == "error" && html["error"] == "username_already_exist") {
                                $("#warning").html("Указанный email уже зарегистрирован в базе");
                            } else if (html["status"] == "error" && html["error"] == "no_data") {
                                $("#warning").html("Извините, произошла ошибка на сервере");
                            } else if (html["status"] == "error") {
                                $("#warning").html("Извините, неизвестная ошибка на сервере");
                            }
                            btnEndabled(btn, false);
                        }
                    });
                }
                function clearWarning() {
                    $("#warning").html("");
                }
                function btnEndabled(btn, v) {
                    v ? btn.disabled = true : btn.disabled = false;
                }
                function removeNotFilled(id) {
                    $("#" + id).removeClass("not_filled");
                    clearWarning();
                }
                function curatorControl(value) {
                    (value == 0 || value == 1) ? $("#for_need_curator").hide() : $("#for_need_curator").show();
                }

                function registrationAppointment(btn, form) {

                }

            </script>
        </div>
    </div>
</div>



