@using STG.ViewModels.Video;
@model VideoViewModel;

@{
    ViewData["Title"] = "Редактирование видео";
    @using Microsoft.AspNetCore.Antiforgery;
    @inject IAntiforgery antiforgery
    var tokenSet = antiforgery.GetAndStoreTokens(Context);
}



<div class="pageheader">
    <div class="media">
        <div class="pageicon pull-left">
            <i class="fa fa-video-camera"></i>
        </div>
        <div class="media-body">
            <ul class="breadcrumb">
                <li><a href=""><i class="glyphicon glyphicon-facetime-video"></i></a></li>
                <li>Редактирование видео</li>
            </ul>
            <h4>Редактирование видео: id @Model.id </h4>
        </div>
    </div><!-- media -->
</div><!-- pageheader -->
<div class="panel panel-dark-head">


    <div class="contentpanel">
        <div class="row">

            <div class="col-sm-12 col-md-12">

                <!-- Nav tabs -->
                <ul class="nav nav-tabs nav-line">
                    <li class="active"><a href="#activities" data-toggle="tab"><strong>Данные</strong></a></li>
                    <li><a href="#video" data-toggle="tab"><strong>Видео контент</strong></a></li>
                    <li><a href="#timing" data-toggle="tab" onclick="getAllVideoSections()"><strong>Тайминг видео</strong></a></li>

                </ul>

                <!-- Tab panes -->
                <div class="tab-content nopadding noborder">
                    <div class="tab-pane active" id="activities">
                        <div class="activity-list">
                            <div class="media">
                                <form id="formVideo" class="form-group form-video">
                                    <input type="text" name="id" class="form-control input-hide" id="id" value="@Model.id" />

                                    <div class="form-group">
                                        <label class="control-label col-md-4 col-xs-12" for="id">ID: @Model.id</label>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-4 col-xs-12" for="name">Наименование:</label>
                                        <div class="col-md-8 col-xs-12">
                                            <input type="text" class="form-control" name="name" id="name" value="@Model.name" onkeypress="schetchik_of_changes();" />
                                            <span class="help-block">Это наименование нигде не отображается, оно только для ориентирования</span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-4 col-xs-12" for="hashPath">Hash ключ пути к файлу:</label>
                                        <div class="col-md-8 col-xs-12">
                                            <input type="text" class="form-control" name="hashPath" id="hashPath" value="@Model.hashPath" disabled />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-4 col-xs-12" for="durationSrc">Длительность:</label>
                                        <div class="col-md-2 col-xs-2">
                                            <select class="form-control" name="durationHours">
                                                @for (var i = 0; i < 24; i++)
                                                {
                                                    <option value="@i" @(Model.durationHours == i ? "selected" : "")>@i ч</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-2 col-xs-2">
                                            <select class="form-control" name="durationMinutes">
                                                @for (var i = 0; i < 60; i++)
                                                {
                                                    <option value="@i" @(Model.durationMinutes == i ? "selected" : "")>@i мин</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-2 col-xs-2">
                                            <select class="form-control" name="durationSeconds">
                                                @for (var i = 0; i < 60; i++)
                                                {
                                                    <option value="@i" @(Model.durationSeconds == i ? "selected" : "")>@i сек</option>
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <hr />

                                    <div class="form-group">
                                        <div class="col-md-8 col-xs-12">
                                            <label class="control-label col-md-4 col-xs-12">Постер:</label>
                                            <span class="help-block">Данный постер отобразится только если у урока не будет постера своего</span>
                                            @if (Model.posterSrc != null)
                                            {
                                                <img src="@Model.posterSrc" class="img-responsive" />
                                                <button class="btn btn-danger" type="button" onclick="isDeletePoster = 1;save()">
                                                    Удалить
                                                </button>
                                            }
                                            <input type="file" class="form-control" name="posterFile" accept="image/*" />
                                        </div>
                                    </div>


                                </form>

                            </div><!-- media -->



                            <p class="btn-save-right">
                                <button class="btn btn-success" onclick="save(this);">Сохранить</button>
                            </p>


                            <script>
                                var isDeletePoster = 0;
                                var isDeleteVideoContentApi = 0;
                                function save(btn) {
                                    var form = new FormData(document.getElementById("formVideo"));
                                    form.append("isDeletePoster", isDeletePoster);
                                    form.append("isDeleteVideoContentApi", isDeleteVideoContentApi);
                                    btnEndabled(btn, true);

                                    $.ajax({
                                        method: 'POST',
                                        type: "POST",
                                        url:  "/api/video/update",
                                        data: form,
                                        cashe: false,
                                        processData: false,
                                        contentType: false,
                                        beforeSend: function (xhr) {
                                            xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                                        },
                                        error:function(){
                                            alert("Ошибка соединения с сервером");
                                            btnEndabled(btn, false);
                                        },
                                        success: function(html)
                                        {
                                            btnEndabled(btn, false);
                                            if (html["status"] == "success") {
                                                window.location.reload();
                                            }
                                        }
                                    });
                                }

                                function converterForceFree() {
								
                                }

                                function btnEndabled(btn, v) {
                                    v ? btn.disabled = true : btn.disabled = false;
                                }

                                function schetchik_of_changes() {

                                }
                            </script>

                        </div><!-- activity-list -->


                    </div><!-- tab-pane -->


                    <link rel="stylesheet"
                          href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/min/dropzone.min.css" />

                    <link rel="stylesheet"
                          href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/min/basic.min.css" />

                    <script type="application/javascript"
                            src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/min/dropzone.min.js">
                    </script>

                    <div class="tab-pane" id="video">
                        <div class="activity-list">
                            <div class="media">

                                @if (Model.videoConverterStatusViewModel.status == "error")
                                {
                                    <p class="status-denied"><i>Сервис конвертирования видео в данный момент не доступен</i></p>
                                }
                                else
                                {

                                    @if (!Model.videoConverterStatusViewModel.isVideoConveterFree)
                                    {
                                        <p>Сервис конвертирования видео в данный момент занят</p>
                                        <p><i>В процессе конвертирования видео: id @Model.videoConverterStatusViewModel.id</i></p>

                                        <button class="btn btn-warning btn-sm btn-save-right" onclick="converterForceFree()">
                                            Принудительное освобождение статуса (не рекомендуется)
                                        </button>
                                    }
                                    else
                                    {

                                        <form method="POST" action='#' class="dropzone dz-clickable"
                                              id="dropper" enctype="multipart/form-data">

                                            <input type="text" name="id" class="form-control input-hide" id="id" value="@Model.id" />
                                            <input type="text" name="id_of_video" class="form-control input-hide" value="@Model.id" />
                                            <input type="text" name="hashPath" class="form-control input-hide" value="@Model.hashPath" />

                                            <label class="control-label col-md-12 col-xs-12">Новый видеофайл: </label>
                                        </form>

                                        <div id="dropper-progress" class="dropper-progress">
                                            <p>
                                                Идет загрузка <font id="procentFont">0</font>%
                                            </p>
                                        </div>

                                        @if (Model.videoApiStatusViewModel != null)
                                        {
                                            @if (Model.videoApiStatusViewModel.status == "success")
                                            {
                                                @if (Model.videoApiStatusViewModel.isContentExist == 1)
                                                {

                                                    <div class="player-preview">

                                                        <video-js id=video-player-js class="video-js vjs-default-skin vjs-16-9" controls>
                                                            <source src="@Model.videoApiStatusViewModel.src" type="application/x-mpegURL">

                                                        </video-js>
                                                        <!--
                                                        <link href="/video-js-hls/video.js/dist/video-js.css" rel="stylesheet" type="text/css">
                                                        <script src="/video-js-hls/video.js/dist/video.js"></script>
                                                        <script src="/video-js-hls/videojs-contrib-hls/dist/videojs-contrib-hls.js"></script>
                                                            -->
                                                        
                                                        <link href="~/videojs-http-streaming/video.js/dist/video-js.css" rel="stylesheet" type="text/css">
                                                        <script src="~/videojs-http-streaming/video.js/dist/video.js"></script>
                                                        <script src="~/videojs-http-streaming/@@videojs/http-streaming/dist/videojs-http-streaming.min.js"></script>


                                                        <script src="~/videojs-resolution-switcher/videojs-resolution-switcher.js"></script>

                                                        <script>
                                                            //videojs('video-player-js').videoJsResolutionSwitcher();
                                                            /*,
                                                                plugins: {
                                                                    videoJsResolutionSwitcher: {
                                                                        default: 'high',
                                                                        dynamicLabel: true
                                                                    }
                                                                }
                                                              */
                                                            var overrideNative = false;
                                                            var player = videojs('video-player-js', {
                                                                html5: {
                                                                    vhs: {
                                                                        overrideNative: !overrideNative
                                                                    },
                                                                    nativeVideoTracks: overrideNative,
                                                                    nativeAudioTracks: overrideNative,
                                                                    nativeTextTracks: overrideNative
                                                                }
                                                            });
                                                            player.ready(function () {
                                                                this.src({
                                                                    src: '@Model.videoApiStatusViewModel.src',
                                                                    type: 'application/x-mpegURL',
                                                                });
                                                            });

                                                        </script>
                                                    </div>

                                                    <button class="btn btn-danger" type="button" onclick="isDeleteVideoContentApi = 1; save(this)">
                                                        Удалить
                                                    </button>
                                                }
                                            }
                                        }
                                    }
                                }

                                <script>
                                    function dropperVisibility(value) {
                                        if (value) {
                                            $("#dropper").hide();
                                            $("#dropper-progress").addClass("active");
                                        }
                                    }
                                    var last_progress = 0;
                                    function setProcent(value) {
                                        if (100 - value > 0 || (last_progress == value && last_progress == 100)) {
                                            $("#procentFont").html(Math.round(value * 100) / 100);
                                        }
                                        last_progress = value;
                                    }
                                </script>

                                <script type="application/javascript">
                                    /*
                                    url: 'http://127.0.0.1:5000/video/upload_dropzone',
                                    */

                                    Dropzone.options.dropper = {
                                        paramName: 'videoFile',
                                        chunking: true,
                                        forceChunking: true,
                                        url: '/api/video/upload_dropzone',
                                        maxFilesize: 5025, // megabytes
                                        chunkSize: 1000000, // bytes
                                        acceptedFiles : "video/mp4,video/mov",

                                        uploadprogress: function(file, progress, bytesSent) {
                                            if (file.previewElement) {
                                                setProcent(progress);
                                            }
                                        },
                                        init: function() {
                                            this.on("addedfile", function(file) {
                                                dropperVisibility(true);
                                            });
                                            this.on("complete", function(file) {
                                                //window.location.reload();
                                            });
                                        }
                                    }
                                </script>


                                <form id="formVideoFile" class="form-group">
                                    <input type="text" name="id" class="form-control input-hide" id="id" value="@Model.id" />

                                </form>

                            </div><!-- media -->




                            <script>
                                var ID_OF_VIDEO = 0;
                                var HASHPATH = "";
                                var BTN_FORM_VIDEO_FILE;
                                var CHUNKS = 0;
                                var CHUNK = 0;
                                var CHUNK_SIZE = 0;
                                var VIDEO_FILE;
                                var VIDEO_FILE_SIZE = 0;
                                var OFFSET = 0;
                                var BLOB;
                                var LEFT = 0;

                                var i = 0;
                                function uploadVideoFile(btn) {

                                    var form = new FormData(document.getElementById("formVideoFile"));

                                    var file = form.get("videoFile");
                                    var chunkSize = 1024 * 1024;
                                    var fileSize = file.size;
                                    var chunks = Math.ceil(file.size / chunkSize, chunkSize);
                                    var chunk = 0;

                                    console.log('file size..', fileSize);
                                    console.log('chunks...', chunks);

                                    ID_OF_VIDEO = form.get("id");
                                    VIDEO_FILE = file;
                                    VIDEO_FILE_SIZE = fileSize;
                                    BTN_FORM_VIDEO_FILE = btn;
                                    //btnEndabled(btn, true);
                                    CHUNK_SIZE = chunkSize;
                                    CHUNKS = chunks;
                                    CHUNK = chunk;
                                    LEFT = fileSize;

                                    i = 0;
                                    uploadChunk(1);
                                    /*
                                    while (chunk <= chunks) {
                                        var offset = chunk * chunkSize;
                                        console.log('current chunk..', chunk);
                                        console.log('offset...', chunk * chunkSize);
                                        console.log('file blob from offset...', offset)
                                        console.log(file.slice(offset, offset + chunkSize));
                                        chunk++;
                                    }
                                    */

                                }
                                var NEXT_OFFSET_OF_BLOB = 0;
                                var FORCE_BREAK = false;
                                var SUMMA = 0;
                                function uploadChunk(isStart) {

                                    if (isStart) console.log("-----------------------------");

                                    var form = new FormData();
                                    form.append("id", ID_OF_VIDEO);
                                    form.append("id_of_video", ID_OF_VIDEO);
                                    form.append("hashPath", "@Model.hashPath");
                                    form.append("isStart", isStart);
                                    form.append("CHUNK", CHUNK);

                                    OFFSET = CHUNK * CHUNK_SIZE;
                                    console.log('current chunk..', CHUNK);
                                    console.log('offset...', CHUNK * CHUNK_SIZE);
                                    console.log('file blob from offset...', OFFSET);

                                    NEXT_OFFSET_OF_BLOB = OFFSET + CHUNK_SIZE;
                                    if (NEXT_OFFSET_OF_BLOB > VIDEO_FILE_SIZE) {
                                        NEXT_OFFSET_OF_BLOB = VIDEO_FILE_SIZE;
                                        FORCE_BREAK = true;
                                    }
                                    console.log("NEXT_OFFSET_OF_BLOB: " + NEXT_OFFSET_OF_BLOB);
                                    SUMMA = SUMMA + NEXT_OFFSET_OF_BLOB - OFFSET;
                                    console.log("SUMMA: " + SUMMA);
                                    form.append("offset", OFFSET);
                                    form.append("SUMMA", SUMMA);

                                    //BLOB = VIDEO_FILE.slice(OFFSET, OFFSET + CHUNK_SIZE);
                                    BLOB = VIDEO_FILE.slice(OFFSET, NEXT_OFFSET_OF_BLOB);
                                    console.log(BLOB);
                                    //if (BLOB.size == 0) return;
                                    //if (OFFSET + CHUNK_SIZE > VIDEO_FILE.size) return;

                                    //form.append("videoFile", BLOB);
                                    //form.append("videoFile", BLOB, VIDEO_FILE.name);

                                    var reader = new FileReader();
                                    var buf;
                                    reader.onload = function (e) {
                                        buf = new Uint8Array(e.target.result);
                                        //for (var i = 0; i < buf.length; i += CHUNK_SIZE) {
                                            //var fd = new FormData();
                                            //fd.append('fname', [file.name, i + 1, 'of', buf.length].join('-'));
                                            //fd.append('data', new Blob([buf.subarray(i, i + size)]));
                                            //var oReq = new XMLHttpRequest();
                                            //oReq.open("POST", url, true);
                                            //oReq.onload = function (oEvent) {
                                                // Uploaded.
                                            //};
                                            //oReq.send(fd);
                                            form.append("videoFile", new Blob([buf.subarray(i, i + CHUNK_SIZE)]), VIDEO_FILE.name);
                                            //form.append("videoFile", new Blob([buf.subarray(OFFSET, NEXT_OFFSET_OF_BLOB)]), VIDEO_FILE.name);
                                            console.log("Blob([buf.subarray("+i+", "+i+" + "+CHUNK_SIZE+")]), "+VIDEO_FILE.name+")");

                                            $.ajax({
                                                method: 'POST',
                                                type: "POST",
                                                //url:  "/api/video/upload",
                                                url: "http://127.0.0.1:5000/video/upload",
                                                data: form,
                                                cashe: false,
                                                processData: false,
                                                contentType: false,
                                                xhrFields: {
                                                    withCredentials: true
                                                },
                                                beforeSend: function (xhr) {
                                                    xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                                                },
                                                error: function () {
                                                    alert("Во время загрузки произошла ошибка");
                                                },
                                                success: function(html)
                                                {
                                                    //if(CHUNK == 2)return;
                                                    //btnEndabled(BTN_FORM_VIDEO_FILE, false);

                                                    if (html["status"] == "success" || html["answer"] == "success") {
                                                        if(CHUNK > 1 || i > 0)return;
                                                        if (CHUNK <= CHUNKS && !FORCE_BREAK) {
                                                            i += CHUNK_SIZE
                                                            CHUNK++;
                                                            uploadChunk(0);
                                                        } else {
                                                            //alert("Загрузка завершена");
                                                        }
                                                    }

                                                }
                                            });
                                        //}
                                    }
                                    reader.readAsArrayBuffer(VIDEO_FILE);


                                }
                                function endUploadByParts() {
                                    btnEndabled(BTN_FORM_VIDEO_FILE, false);
                                }
                            </script>

                        </div><!-- activity-list -->


                    </div><!-- tab-pane -->

                    <div class="tab-pane timing" id="timing">
                        <div class="activity-list">
                            <div class="media">
                                <p><i>Значения в ячейках сохраняются после убирания фокуса или нажатия кнопки Enter</i></p>

                                <div class="row" id="timingBlock">
                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                                        <div class="form-group">
                                            <label class="control-label">1. Раздел</label>
                                            <input type="text" name="section" class="form-control">
                                            <button type="button" class="btn btn-sm btn-danger" onclick="idOfVideosection = 1';" data-toggle="modal" data-target="#modal_delete_videosection">
                                                Удалить раздел
                                            </button>
                                        </div>
                                    </div>

                                    <div class="col-lg-8 col-md-8 col-sm-8 col-xs-8 row">

                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                                                <div class="form-group">
                                                    <label class="control-label">1. Подраздел</label>
                                                    <input type="text" name="subsection" class="form-control">
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="idOfVideosubsection = 1';" data-toggle="modal" data-target="#modal_delete_videosubsection">
                                                        Удалить подраздел
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3">
                                                <div class="form-group">
                                                    <label class="control-label">Минуты</label>
                                                    <input type="number" name="minute" max="2" class="form-control" onkeyup="minuteHandle(this)" />
                                                </div>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3">
                                                <div class="form-group">
                                                    <label class="control-label">Секунды</label>
                                                    <input type="number" name="seconds" class="form-control" onkeyup="secondsHandle(this)" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <p class="btn-save-right">
                                                <button class="btn btn-warning btn-sm" type="button" data-toggle="modal" data-target="#modal_add_videosubsection" onclick="idOfVideosection='1'">
                                                    Добавить новый подраздел
                                                </button>
                                            </p>
                                        </div>

                                    </div>
                                </div>


                                <hr />

                                <p class="btn-save-right">
                                    <button class="btn btn-info " type="button" data-toggle="modal" data-target="#modal_add_videosection">
                                        Добавить новый раздел
                                    </button>
                                </p>

                                <div class="modal fade" id="modal_add_videosection" tabindex="-1" role="dialog">
                                    <div class="modal-dialog modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">&times;</button>
                                                <h4 class="modal-title">Добавить новый раздел</h4>
                                            </div>
                                            <div class="modal-body">
                                                <div class="panel panel-default">
                                                    <form id="formNewSection">
                                                        <div class="panel-body">
                                                            <div class="row">
                                                                <div class="form-group">
                                                                    <label class="col-sm-3 control-label" for="name">Наименование <span class="asterisk">*</span></label>
                                                                    <div class="col-sm-9">
                                                                        <input type="text" maxlength="256" name="name" class="form-control" placeholder="Наименование нового раздела" required onkeypress="clearWarningAddSection();" />
                                                                        <span style="color:red;" id="warningAddSection"></span>
                                                                    </div>
                                                                </div>
                                                                <input type="hidden" name="id_of_video" value="@Model.id" />
                                                                

                                                            </div><!-- row -->
                                                        </div><!-- panel-body -->
                                                        <div class="panel-footer">
                                                            <div class="row">
                                                                <div class="col-sm-9 col-sm-offset-3">
                                                                    <button class="btn btn-primary mr5" onclick="createSection(this);">Создать</button>
                                                                    <button class="btn btn-danger mr5" id="btn_for_close_in_modal_of_create_new_section" data-dismiss="modal">Закрыть</button>
                                                                </div>
                                                            </div>
                                                        </div><!-- panel-footer -->
                                                    </form>
                                                </div><!-- panel -->
                                            </div>
                                        </div>
                                    </div>

                                </div>


                                <div class="divHide">

                                </div>

                            </div><!-- media -->




                            <script>
                                function minuteHandle(el) {
                                    if (el.value < 0) {
                                        el.value = 0;
                                    } else if (el.value > 999) {
                                        el.value = 999;
                                    }
                                }
                                function secondsHandle(el) {
                                    if (el.value < 0) {
                                        el.value = 0;
                                    } else if (el.value > 60) {
                                        el.value = 60;
                                    }
                                }
                                function clearWarningAddSection() {
                                    $("#warningAddSection").html("");
                                }
                                function createSection(btn) {
                                    var form = new FormData(document.getElementById("formNewSection"));
                                    if (form.get("name") == "") {
                                        $("#warningAddSection").html("Поле наименования обязательно");
                                        return;
                                    }

                                    btnEndabled(btn, true);
                                    $.ajax({
                                        method: 'POST',
                                        type: "POST",
                                        url: "/api/videosection/add",
                                        data: form,
                                        cashe: false,
                                        processData: false,
                                        contentType: false,
                                        beforeSend: function (xhr) {
                                            xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                                        },
                                        error: function () {
                                            alert("Ошибка соединения с сервером");
                                            btnEndabled(btn, false);
                                        },
                                        success: function (html) {
                                            btnEndabled(btn, false);
                                            if (html["status"] == "success") {
                                                $("#btn_for_close_in_modal_of_create_new_section").click();
                                                getAllVideoSections();
                                            } else {
                                                alert("Неизвестная ошибка на сервере");
                                            }
                                        }
                                    });
                                }

                                function getAllVideoSections() {
                                    var form = new FormData();
                                    form.append("id_of_video", "@Model.id");
                                    $("#timingBlock").html("Идёт загрузка..");

                                    $.ajax({
                                        method: 'POST',
                                        type: "POST",
                                        url: "/api/videosection/get",
                                        data: form,
                                        cashe: false,
                                        processData: false,
                                        contentType: false,
                                        beforeSend: function (xhr) {
                                            xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                                        },
                                        error: function () {
                                            $("#timingBlock").html("Ошибка соединения с сервером");
                                        },
                                        success: function (html) {
                                            if (html["status"] == "success") {
                                                buildTable(html);
                                            } else {
                                                $("#timingBlock").html("Ошибка на сервере");
                                            }
                                        }
                                    });
                                }

                                function saveTiming(btn) {
                                    var form = new FormData(document.getElementById("formVideo"));

                                    btnEndabled(btn, true);
                                    $.ajax({
                                        method: 'POST',
                                        type: "POST",
                                        url: "/api/videosection/add",
                                        data: form,
                                        cashe: false,
                                        processData: false,
                                        contentType: false,
                                        beforeSend: function (xhr) {
                                            xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
                                        },
                                        error: function () {
                                            alert("Ошибка соединения с сервером");
                                            btnEndabled(btn, false);
                                        },
                                        success: function (html) {
                                            btnEndabled(btn, false);
                                            if (html["status"] == "success") {
                                                //window.location.reload();
                                            }
                                        }
                                    });
                                }
                            </script>

                        </div><!-- activity-list -->


                    </div>

                </div><!-- tab-content -->

            </div><!-- col-sm-9 -->
        </div><!-- row -->


    </div>
</div>


<div class="modal fade" style="padding-top:20%;" id="modal_delete_videosection" tabindex="-1" role="dialog">
    <div class="modal-dialog" style="width: 50%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #ffffff">
                <button class="close" type="button" data-dismiss="modal">&times;</button>
                <h4 align="left" class="modal-title" style="padding-left: 1em"> Вы уверены, что хотите удалить раздел и все его подразделы?</h4>
            </div>
            <div class="modal-body">

                <center>
                    <button type="button" class="btn btn-success" data-dismiss="modal" data-target="" onclick="deleteVideosection();">Да</button>

                    <button type="button" class="btn btn-danger" data-dismiss="modal" data-target="">Нет</button>
                </center>
            </div>

        </div>
    </div>
</div>

<script>
    var idOfVideosection = 0;
    function deleteVideosection() {
        var form = new FormData();
        form.append("id", idOfVideosection);

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/videosection/delete",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                alert("Ошибка соединения с сервером");
            },
            success: function (html) {
                if (html["status"] == "success") {
                    getAllVideoSections();
                } else {
                    alert("Извините, на сервере произошла неизвестная ошибка");
                }
            }
        });
    }

</script>






<div class="modal fade" style="padding-top:20%;" id="modal_delete_videosubsection" tabindex="-1" role="dialog">
    <div class="modal-dialog" style="width: 50%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #ffffff">
                <button class="close" type="button" data-dismiss="modal">&times;</button>
                <h4 align="left" class="modal-title" style="padding-left: 1em"> Вы уверены, что хотите удалить подраздел?</h4>
            </div>
            <div class="modal-body">

                <center>
                    <button type="button" class="btn btn-success" data-dismiss="modal" data-target="" onclick="deleteVideosubsection();">Да</button>

                    <button type="button" class="btn btn-danger" data-dismiss="modal" data-target="">Нет</button>
                </center>
            </div>

        </div>
    </div>
</div>

<script>
    var idOfVideosubsection = 0;
    function deleteVideosubsection() {
        var form = new FormData();
        form.append("id", idOfVideosubsection);
        

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/videosubsection/delete",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                alert("Ошибка соединения с сервером");
            },
            success: function (html) {
                if (html["status"] == "success") {
                    getAllVideoSections();
                } else {
                    alert("Извините, на сервере произошла неизвестная ошибка");
                }
            }
        });
    }

</script>


<script>
    function buildTable(json) {
        $("#timingBlock").html("");
        if (json["videosectionList"] !== null && typeof (json["videosectionList"]) !== "undefined") {
            for (var i = 0; i < json["videosectionList"].length; i++) {

                $("#timingBlock").append(buildDivVideosection(i, json["videosectionList"][i]));

                if (json["videosectionList"][i]["videosubsectionList"] !== null && typeof (json["videosectionList"][i]["videosubsectionList"]) !== "undefined") {
                    $("#timingBlock").append(buildDivVideosubsection(
                        json["videosectionList"][i]["id"],
                        json["videosectionList"][i]["videosubsectionList"]
                    )
                    );
                    $("#timingBlock").append(buildHr());
                } else {
                    $("#timingBlock").append(buildBtnVideosubsectionAddNew(json["videosectionList"][i]["id"]));

                    console.log("no subsection");
                }
            }
        }
    }
    function buildDivVideosection(i, videosection) {
        var elDiv = document.createElement("div");
        elDiv.className = "col-lg-4 col-md-4 col-sm-4 col-xs-4";

        var divFormGroup = document.createElement("div");
        divFormGroup.className = "form-group";

        var label = document.createElement("label");
        label.className = "control-label";
        label.innerHTML = (i + 1) + ". Раздел";

        var elInput = document.createElement("input");
        elInput.className = "form-control";
        elInput.type = "text";
        elInput.name = "section";
        elInput.value = videosection["name"];
        elInput.onchange = function () {
            videosectionSave(videosection["id"], this.value);
        }

        var btnDelete = document.createElement("button");
        btnDelete.className = "btn btn-sm btn-danger";
        btnDelete.type = "button";
        btnDelete.innerHTML = "Удалить раздел";
        btnDelete.onclick = function () {
            idOfVideosection = videosection["id"];
        }
        btnDelete.setAttribute('data-toggle', 'modal');
        btnDelete.setAttribute('data-target', '#modal_delete_videosection');

        divFormGroup.appendChild(label);
        divFormGroup.appendChild(elInput);
        divFormGroup.appendChild(btnDelete);
        elDiv.appendChild(divFormGroup);

        return elDiv;
    }
    function buildDivVideosubsection(id_of_section, videosubsectionList) {

        var divVideosubsectionList = document.createElement("div");
        divVideosubsectionList.className = "col-lg-8 col-md-8 col-sm-8 col-xs-8 row";

        for (var i = 0; i < videosubsectionList.length; i++) {
            var divVideosubsection = document.createElement("form");
            divVideosubsection.className = "col-lg-12 col-md-12 col-sm-12 col-xs-12";
            divVideosubsection.action = "#";

            divVideosubsection.appendChild(buildDivVideosubsectionName(i, videosubsectionList[i]));
            divVideosubsection.appendChild(buildDivVideosubsectionMinutes(videosubsectionList[i]));
            divVideosubsection.appendChild(buildDivVideosubsectionSeconds(videosubsectionList[i]));

            divVideosubsectionList.appendChild(divVideosubsection);
        }
        divVideosubsectionList.appendChild(buildBtnVideosubsectionAddNew(id_of_section));

        return divVideosubsectionList;
    }

    function buildDivVideosubsectionName(i, subsection) {

        var divVideosubsectionName = document.createElement("div");
        divVideosubsectionName.className = "col-lg-6 col-md-6 col-sm-6 col-xs-6";

        var divFormGroup = document.createElement("div");
        divFormGroup.className = "form-group";

        var label = document.createElement("label");
        label.className = "control-label";
        label.innerHTML = (i + 1) + ". Подраздел";

        var elInput = document.createElement("input");
        elInput.className = "form-control";
        elInput.type = "text";
        elInput.name = "section";
        elInput.value = subsection["name"];
        elInput.onchange = function () {
            videosubsectionNameSave(
                subsection["id"],
                "name",
                this.value
            );
        }

        var btnDelete = document.createElement("button");
        btnDelete.className = "btn btn-sm btn-danger";
        btnDelete.type = "button";
        btnDelete.innerHTML = "Удалить раздел";
        btnDelete.onclick = function () {
            idOfVideosubsection = subsection["id"];
        }
        btnDelete.setAttribute('data-toggle', 'modal');
        btnDelete.setAttribute('data-target', '#modal_delete_videosubsection');

        divFormGroup.appendChild(label);
        divFormGroup.appendChild(elInput);
        divFormGroup.appendChild(btnDelete);
        divVideosubsectionName.appendChild(divFormGroup);

        return divVideosubsectionName;
    }

    function buildDivVideosubsectionMinutes(subsection) {
        var div = document.createElement("div");
        div.className = "col-lg-3 col-md-3 col-sm-3 col-xs-3";

        var divFormGroup = document.createElement("div");
        divFormGroup.className = "form-group";

        var label = document.createElement("label");
        label.className = "control-label";
        label.innerHTML = "Минуты ";

        var elInput = document.createElement("input");
        elInput.className = "form-control";
        elInput.type = "number";
        elInput.name = "timing_minutes";
        elInput.value = subsection["timing_minutes"];
        elInput.onkeyup = function () {
            minuteHandle(this);
        }
        elInput.onchange = function () {
            videosubsectionNameSave(
                subsection["id"],
                "timing_minutes",
                this.value
            );
        }

        divFormGroup.appendChild(label);
        divFormGroup.appendChild(elInput);
        div.appendChild(divFormGroup);
        return div;
    }

    function buildDivVideosubsectionSeconds(subsection) {
        var div = document.createElement("div");
        div.className = "col-lg-3 col-md-3 col-sm-3 col-xs-3";

        var divFormGroup = document.createElement("div");
        divFormGroup.className = "form-group";

        var label = document.createElement("label");
        label.className = "control-label";
        label.innerHTML = "Секунды";

        var elInput = document.createElement("input");
        elInput.className = "form-control";
        elInput.type = "number";
        elInput.name = "timing_seconds";
        elInput.value = subsection["timing_seconds"];
        elInput.onkeyup = function () {
            secondsHandle(this);
        }
        elInput.onchange = function () {
            videosubsectionNameSave(
                subsection["id"],
                "timing_seconds",
                this.value
            );
        }

        divFormGroup.appendChild(label);
        divFormGroup.appendChild(elInput);
        div.appendChild(divFormGroup);
        return div;
    }

    function buildBtnVideosubsectionAddNew(id_of_section) {
        var div = document.createElement("div");
        div.className = "col-lg-12 col-md-12 col-sm-12 col-xs-12";
        var p = document.createElement("p");
        p.className = "btn-save-right";
        var btn = document.createElement("button");
        btn.className = "btn btn-warning btn-sm";
        btn.type = "button";
        btn.innerHTML = "Добавить новый подраздел";
        btn.setAttribute('data-toggle', 'modal');
        btn.setAttribute('data-target', '#modal_add_videosubsection');
        btn.onclick = function () {
            idOfVideosection = id_of_section;
        }

        p.appendChild(btn);
        div.appendChild(p);
        return div;
    }

    function buildHr() {
        var div = document.createElement("div");
        div.className = "col-lg-12 col-md-12 col-sm-12 col-xs-12";

        var hr = document.createElement("hr");
        div.appendChild(hr);

        return div;
    }


    function videosectionSave(id_of_section, name) {
        var form = new FormData();
        form.append("id", id_of_section);
        form.append("id_of_video", "@Model.id");
        form.append("name", name);
        

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/videosection/update",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                alert("Ошибка соединения с сервером");
            },
            success: function (html) {
                if (html["status"] == "success") {
                    showAlertSuccess();
                    getAllVideoSections();
                } else {
                    alert("Извините, на сервере произошла неизвестная ошибка");
                }
            }
        });
    }


    function videosubsectionNameSave(id_of_subsection, field, value) {
        var form = new FormData();
        form.append("id", id_of_subsection);
        form.append("field", field);
        form.append("value", value);
        form.append("_csrf", "<?=Yii::$app->request->getCsrfToken()?>");

        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/videosubsection/update",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                alert("Ошибка соединения с сервером");
            },
            success: function (html) {
                if (html["status"] == "success") {
                    showAlertSuccess();
                    getAllVideoSections();
                } else {
                    alert("Извините, на сервере произошла неизвестная ошибка");
                }
            }
        });
    }


</script>














<div class="modal fade" id="modal_add_videosubsection" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">&times;</button>
                <h4 class="modal-title">Добавить новый подраздел</h4>
            </div>
            <div class="modal-body">
                <div class="panel panel-default">
                    <form id="formNewSubsection">
                        <div class="panel-body">
                            <div class="row">
                                <div class="form-group">
                                    <label class="col-sm-3 control-label" for="name">Наименование <span class="asterisk">*</span></label>
                                    <div class="col-sm-9">
                                        <input type="text" maxlength="256" name="name" class="form-control" placeholder="Наименование нового подраздела" required onkeypress="clearWarningAddSubsection();" />
                                        <span style="color:red;" id="warningAddSubsection"></span>
                                    </div>
                                </div>
                                <input type="hidden" name="id_of_video" value="@Model.id" />
                                

                            </div><!-- row -->
                        </div><!-- panel-body -->
                        <div class="panel-footer">
                            <div class="row">
                                <div class="col-sm-9 col-sm-offset-3">
                                    <button class="btn btn-primary mr5" onclick="createSubsection(this);">Создать</button>
                                    <button class="btn btn-danger mr5" id="btn_for_close_in_modal_of_create_new_subsection" data-dismiss="modal">Закрыть</button>
                                </div>
                            </div>
                        </div><!-- panel-footer -->
                    </form>
                </div><!-- panel -->
            </div>
        </div>
    </div>

</div>

<script>
    function clearWarningAddSubsection() {
        $("#warningAddSubsection").html("");
    }

    function createSubsection(btn) {
        var form = new FormData(document.getElementById("formNewSubsection"));
        if (form.get("name") == "") {
            $("#warningAddSubsection").html("Поле наименования обязательно");
            return;
        }
        form.append("id_of_section", idOfVideosection);

        btnEndabled(btn, true);
        $.ajax({
            method: 'POST',
            type: "POST",
            url: "/api/videosubsection/add",
            data: form,
            cashe: false,
            processData: false,
            contentType: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader('@tokenSet.HeaderName', '@tokenSet.RequestToken');
            },
            error: function () {
                alert("Ошибка соединения с сервером");
                btnEndabled(btn, false);
            },
            success: function (html) {
                btnEndabled(btn, false);
                if (html["status"] == "success") {
                    $("#btn_for_close_in_modal_of_create_new_subsection").click();
                    getAllVideoSections();
                } else {
                    alert("Неизвестная ошибка на сервере");
                }
            }
        });
    }
</script>